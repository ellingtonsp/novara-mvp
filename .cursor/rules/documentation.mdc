
# Documentation Standards

## Mandatory Documentation
- **Every feature** must have documentation in `/docs/features/[feature-name]/`
- **Every bug fix** must be documented with root cause and solution
- **Every deployment** must have deployment notes
- **All API endpoints** must be documented

## Feature Documentation Structure
```
/docs/features/[feature-name]/
├── README.md (overview)
├── user-journey.md
├── api-endpoints.md
├── openapi.yaml            # NEW – formal contract for CI contract tests
├── functional-logic.md
├── database-schema.md
├── migration.sql or migration.js  # NEW – exact migration stub referenced in docs
├── mapping.ts              # NEW – static data mapping or config tables required by feature
├── feature-flags.json      # NEW – PostHog flag payload for automated rollout scripts
├── ci-updates.md           # NEW – notes on required CI changes (workflows, coverage paths)
├── deployment-notes.md
└── testing-guide.md
```

## Code Documentation
- Use JSDoc for backend functions
- Add TypeScript interfaces for frontend components
- Document complex business logic
- Include usage examples

## Testing Documentation
- Document test scenarios and expected outcomes
- Include setup and teardown instructions
- Document test data requirements
- Maintain test coverage reports

## Deployment Documentation
- Document environment-specific configurations
- Include rollback procedures
- Document monitoring and alerting setup
- Maintain deployment checklists

- Document environment-specific configurations
- Include rollback procedures
- Document monitoring and alerting setup
- Maintain deployment checklists
