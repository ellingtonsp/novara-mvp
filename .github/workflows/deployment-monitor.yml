name: Deployment Health Monitor

on:
  schedule:
    # Run every 30 minutes instead of every 5 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [main, staging]
    paths:
      - 'scripts/deployment-monitor.js'
      - '.github/workflows/deployment-monitor.yml'

jobs:
  monitor-deployments:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run deployment health check
        id: health-check
        run: |
          echo "Running deployment health check..."
          node scripts/deployment-monitor.js --once
          
      - name: Check for failures
        id: check-failures
        run: |
          # Check if there are any alerts in the log
          if grep -q "🚨 ALERT" logs/deployment-monitor.log; then
            echo "::warning::Deployment issues detected - check logs"
            echo "failures=true" >> $GITHUB_OUTPUT
          else
            echo "failures=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Upload monitoring logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: deployment-monitor-logs
          path: logs/
          retention-days: 7
          
      # Removed automatic GitHub issue creation to reduce noise
      # Only create issues for critical failures via manual trigger
      
      - name: Update deployment status
        if: always()
        run: |
          # Create a deployment status summary
          echo "## Deployment Health Summary" > deployment-status.md
          echo "" >> deployment-status.md
          echo "**Last Check:** $(date -u)" >> deployment-status.md
          echo "**Status:** ${{ steps.check-failures.outputs.failures == 'true' && '⚠️ Issues Detected' || '✅ All Healthy' }}" >> deployment-status.md
          echo "" >> deployment-status.md
          
          if [ -f logs/deployment-status.json ]; then
            echo "### Environment Status:" >> deployment-status.md
            cat logs/deployment-status.json | jq -r 'to_entries[] | "- **\(.key)**: \(.value.overall)"' >> deployment-status.md
          fi
          
          echo "" >> deployment-status.md
          echo "---" >> deployment-status.md
          echo "*Generated by automated deployment monitoring*" >> deployment-status.md 