name: Documentation Fast Track

on:
  pull_request:
    types: [opened, synchronize, labeled]
    branches: [develop]
    paths:
      - 'docs/**'
      - '**.md'
      - 'CLAUDE.md'
      - 'README.md'

jobs:
  check-documentation-only:
    name: Verify Documentation Only
    runs-on: ubuntu-latest
    outputs:
      is_docs_only: ${{ steps.check.outputs.is_docs_only }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check if PR contains only documentation
        id: check
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          
          # Check if all files are documentation
          IS_DOCS_ONLY=true
          for file in $CHANGED_FILES; do
            if [[ ! "$file" =~ \.(md|MD)$ ]] && [[ ! "$file" =~ ^docs/ ]]; then
              IS_DOCS_ONLY=false
              break
            fi
          done
          
          echo "is_docs_only=$IS_DOCS_ONLY" >> $GITHUB_OUTPUT
          echo "Changed files: $CHANGED_FILES"
          echo "Is documentation only: $IS_DOCS_ONLY"

  auto-label:
    name: Auto Label Documentation PRs
    runs-on: ubuntu-latest
    needs: check-documentation-only
    if: needs.check-documentation-only.outputs.is_docs_only == 'true'
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml
      
      - name: Add documentation label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: documentation

  fast-track-to-staging:
    name: Create PR to Staging
    runs-on: ubuntu-latest
    needs: check-documentation-only
    if: |
      needs.check-documentation-only.outputs.is_docs_only == 'true' && 
      github.event.pull_request.merged == true &&
      github.base_ref == 'develop'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create PR from develop to staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="## Auto-generated PR for documentation fast-track
          
          Original PR: #${{ github.event.pull_request.number }}
          
          This PR contains only documentation changes and is being fast-tracked to staging.
          
          ### Changes
          ${{ github.event.pull_request.body }}
          
          ### Verification
          - âœ… Documentation only (verified by automation)
          - âœ… No code changes
          - âœ… Safe to deploy
          
          ðŸ¤– Generated by Documentation Fast Track workflow"
          
          gh pr create \
            --base staging \
            --head develop \
            --title "ðŸš€ Fast-track: $PR_TITLE" \
            --body "$PR_BODY" \
            --label "documentation,fast-track"

  documentation-checks:
    name: Documentation Quality Checks
    runs-on: ubuntu-latest
    needs: check-documentation-only
    if: needs.check-documentation-only.outputs.is_docs_only == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          config-file: '.github/markdown-link-check-config.json'
        continue-on-error: true
      
      - name: Spell check
        uses: streetsidesoftware/cspell-action@v2
        with:
          files: |
            **/*.md
            docs/**/*
        continue-on-error: true
      
      - name: Markdown lint
        uses: articulate/actions-markdownlint@v1
        with:
          config: .github/.markdownlint.json
        continue-on-error: true

  comment-on-pr:
    name: Add Fast Track Comment
    runs-on: ubuntu-latest
    needs: check-documentation-only
    if: needs.check-documentation-only.outputs.is_docs_only == 'true'
    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ **Documentation Fast Track**\n\nThis PR contains only documentation changes and is eligible for fast-track deployment.\n\n**Next steps:**\n1. Get one review approval\n2. Merge to `develop`\n3. Automation will create PR to `staging`\n4. Fast-track to `main` after staging verification'
            })