name: Regression Tests

on:
  push:
    branches: [staging, main]
  pull_request:
    branches: [staging, main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  smoke-tests:
    name: Quick Smoke Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Run smoke tests
        run: |
          npm run test:smoke -- --env=${{ github.event.inputs.environment || 'staging' }}
          
  validation:
    name: Pre-deployment Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd backend && npm ci
          cd ../frontend && npm ci
          
      - name: Run validation
        run: npm run validate:pre-deploy
        
  regression-tests:
    name: Full Regression Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Run regression tests
        run: |
          npm run test:regression -- --env=${{ github.event.inputs.environment || 'staging' }}
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.json
          
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [smoke-tests, regression-tests]
    if: always()
    steps:
      - name: Send notification
        run: |
          if [ "${{ needs.regression-tests.result }}" == "success" ]; then
            echo "✅ All tests passed!"
          else
            echo "❌ Tests failed - check results"
          fi