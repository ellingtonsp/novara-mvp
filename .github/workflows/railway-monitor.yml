name: Railway Deployment Monitor

on:
  schedule:
    # Check every 5 minutes during active hours
    - cron: '*/5 14-22 * * *'  # 2 PM - 10 PM UTC (10 AM - 6 PM EST)
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [main, staging]

jobs:
  monitor-railway:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test Railway secrets
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      run: |
        node scripts/test-railway-secrets.js
        
    - name: Monitor Railway deployments
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      run: |
        node scripts/railway-web-monitor.js --once
        
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Railway Deployment Failure Detected',
            body: 'Railway deployment failure detected. Check the Railway dashboard immediately.',
            labels: ['railway-failure', 'deployment', 'urgent'],
            assignees: ['ellingtonsp']
          });
          
  health-check:
    runs-on: ubuntu-latest
    needs: monitor-railway
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Health check production
      run: |
        node scripts/environment-health-check.js production
        
    - name: Health check staging
      run: |
        node scripts/environment-health-check.js staging
        
    - name: Create issue on health check failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üè• Environment Health Check Failed',
            body: 'Environment health check failed. Check staging and production environments.',
            labels: ['health-check', 'deployment', 'urgent'],
            assignees: ['ellingtonsp']
          }); 