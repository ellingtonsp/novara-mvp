name: Railway Deployment Monitor

on:
  # Disabled to reduce alert noise - enable manually when needed
  # schedule:
  #   # Check every 30 minutes during active hours (reduced from 5 minutes)
  #   - cron: '*/30 14-22 * * *'  # 2 PM - 10 PM UTC (10 AM - 6 PM EST)
  workflow_dispatch:  # Allow manual trigger
  # push:
  #   branches: [main, staging]

jobs:
  monitor-railway:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test Railway secrets
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      run: |
        if [ -z "$RAILWAY_TOKEN" ] || [ -z "$RAILWAY_PROJECT_ID" ]; then
          echo "⚠️ Railway secrets not configured, skipping Railway monitoring"
          exit 0
        fi
        node scripts/test-railway-secrets.js
        
    - name: Monitor Railway deployments
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      run: |
        if [ -z "$RAILWAY_TOKEN" ] || [ -z "$RAILWAY_PROJECT_ID" ]; then
          echo "⚠️ Railway secrets not configured, skipping Railway monitoring"
          exit 0
        fi
        node scripts/railway-web-monitor.js --once
        
    # Removed automatic issue creation to reduce noise
    # Only create issues for critical failures via manual trigger
        
  health-check:
    runs-on: ubuntu-latest
    needs: monitor-railway
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Health check production
      run: |
        node scripts/comprehensive-health-check.js production
      continue-on-error: true
        
    - name: Health check staging
      run: |
        node scripts/comprehensive-health-check.js staging
      continue-on-error: true
        
    # Removed automatic issue creation to reduce noise
    # Only create issues for critical failures via manual trigger 