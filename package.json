{
  "name": "novara-mvp",
  "version": "1.0.0",
  "description": "Novara MVP - Full Stack Application",
  "scripts": {
    "start": "cd backend && NODE_ENV=production node server.js",
    "install": "cd backend && npm ci --omit=dev",
    "validate-environments": "node scripts/environment-validator.js",
    "validate-schema": "node scripts/airtable-schema-validator.js",
    "validate-schema-comprehensive": "node scripts/comprehensive-schema-check.js",
    "test": "node scripts/test-quick.js",
    "test:fast": "cd backend && npm test && cd ../frontend && npm run build",
    "test:full": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm run test",
    "test:backend": "cd backend && npm run test",
    "test:frontend:environments": "node scripts/testing/test-frontend-environments.js",
    "test:frontend:development": "node scripts/testing/test-frontend-environments.js development",
    "test:frontend:staging": "node scripts/testing/test-frontend-environments.js staging",
    "test:frontend:production": "node scripts/testing/test-frontend-environments.js production",
    "test:watch": "npm run test:frontend -- --watch",
    "test:coverage": "npm run test:frontend -- --coverage && npm run test:backend -- --coverage",
    "analyze": "cd frontend && npm run build",
    "analyze:open": "open frontend/dist/stats.html",
    "performance": "node scripts/performance-monitor.js",
    "performance:staging": "node scripts/performance-monitor.js staging",
    "performance:production": "node scripts/performance-monitor.js production",
    "monitor:essential": "node scripts/deployment-monitor.js --once",
    "monitor:detailed": "node scripts/deployment-monitor.js --continuous",
    "monitor:railway": "node scripts/railway-web-monitor.js --once",
    "monitor:railway:continuous": "node scripts/railway-web-monitor.js --continuous",
    "monitor:platforms": "node scripts/platform-monitor.js --once",
    "monitor:all": "npm run monitor:essential && npm run monitor:railway",
    "track:deployments": "node scripts/simple-deployment-tracker.js --track",
    "track:deployments:interactive": "node scripts/simple-deployment-tracker.js --interactive",
    "track:deployments:stats": "node scripts/simple-deployment-tracker.js --stats",
    "test:railway-secrets": "node scripts/test-railway-secrets.js",
    "health-check": "node scripts/environment-health-check.js",
    "health-check:dev": "node scripts/environment-health-check.js development",
    "health-check:staging": "node scripts/environment-health-check.js staging",
    "health-check:production": "node scripts/environment-health-check.js production",
    "validate:environments": "node scripts/validate-environment-config.js",
    "setup:hooks": "./scripts/setup-git-hooks.sh",
    "safety:check": "npm run validate:environments && npm run test && npm run health-check",
    "pre-deploy": "npm run validate:environments && npm run validate-schema-comprehensive && npm run health-check:staging && npm run health-check:production",
    "deploy:staging": "./scripts/deploy-with-validation.sh staging",
    "deploy:production": "./scripts/deploy-with-validation.sh production",
    "sync:env-examples": "node scripts/setup/sync-env-examples.js",
    "cleanup:deployments": "./scripts/deployment-cleanup-and-testing.sh",
    "cleanup:automated": "./scripts/automated-cleanup.sh",
    "cicd:test": "./scripts/deployment-cleanup-and-testing.sh",
    "monitor:deployments": "npm run track:deployments",
    "test:deployment-scripts": "bash -n scripts/deploy-staging.sh && bash -n scripts/deploy-production.sh",
    "validate:deployment": "npm run safety:check && npm run test:deployment-scripts",
    "pre-deploy:build": "cd frontend && npm run build && cd ..",
    "pre-deploy:typescript": "cd frontend && npx tsc --noEmit && cd ..",
    "pre-deploy:full": "npm run pre-deploy:typescript && npm run pre-deploy:build && npm run validate:deployment",
    "test:demo-ready": "./scripts/test-end-to-end-all-environments.sh",
    "test:all-environments": "./scripts/test-end-to-end-all-environments.sh",
    "validate-database-config": "./scripts/validate-database-configuration.sh",
    "bugbot:local": "node scripts/bugbot-local-monitor.js",
    "bugbot:pre-deploy": "npm run bugbot:local && npm run safety:check",
    "bugbot:post-deploy": "node scripts/bugbot-post-deploy-check.js",
    "bugbot:monitor": "npm run bugbot:local && npm run monitor:all",
    "test:pwa-cache": "node scripts/test-pwa-cache-functionality.js",
    "test:pwa-cache:production-only": "SKIP_LOCAL_TESTS=true node scripts/test-pwa-cache-functionality.js",
    "test:existing-user-onboarding": "node scripts/test-existing-user-onboarding.js",
    "test:ui-comprehensive": "npm run test:pwa-cache:production-only && npm run test:existing-user-onboarding",
    "test:regression": "node scripts/regression-test.js",
    "test:regression:staging": "node scripts/regression-test.js --env=staging",
    "test:regression:production": "node scripts/regression-test.js --env=production",
    "test:smoke": "node scripts/smoke-test.js",
    "test:smoke:staging": "node scripts/smoke-test.js --env=staging",
    "test:smoke:production": "node scripts/smoke-test.js --env=production",
    "validate:pre-deploy": "node scripts/pre-deployment-validation.js",
    "deploy:safe": "npm run validate:pre-deploy && npm run test:smoke && echo 'Ready to deploy!'",
    "post-deploy:verify": "npm run test:smoke && npm run test:regression"
  },
  "dependencies": {
    "axios": "^1.11.0",
    "better-sqlite3": "^12.2.0",
    "node-fetch": "^2.7.0",
    "uuid": "^11.1.0"
  }
}
